// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.0.0.0
//      SpecFlow Generator Version:3.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace PoochWareHouse_Automation.Tests.Navigation
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("News and Blog Navigation")]
    public partial class NewsAndBlogNavigationFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "NewsBlogNavigation.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "News and Blog Navigation", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Accessing the news article links will navigate the user to the correct news artic" +
            "le")]
        [NUnit.Framework.TestCaseAttribute("News & Blog", "Summer Is Here", "image", "Summer Is Here!", null)]
        [NUnit.Framework.TestCaseAttribute("News & Blog", "Summer Is Here", "button", "Summer Is Here!", null)]
        [NUnit.Framework.TestCaseAttribute("News & Blog", "Pooch Car Safety", "image", "Pooch Car Safety", null)]
        [NUnit.Framework.TestCaseAttribute("News & Blog", "Pooch Car Safety", "button", "Pooch Car Safety", null)]
        [NUnit.Framework.TestCaseAttribute("News & Blog", "Why Use a Harness?", "image", "Why Use a Harness?", null)]
        [NUnit.Framework.TestCaseAttribute("News & Blog", "Why Use a Harness?", "button", "Why Use a Harness?", null)]
        public virtual void AccessingTheNewsArticleLinksWillNavigateTheUserToTheCorrectNewsArticle(string pageName, string article, string linkType, string expectedArticle, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Accessing the news article links will navigate the user to the correct news artic" +
                    "le", null, exampleTags);
#line 3
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
 testRunner.Given(string.Format("I access the \'{0}\' article page", pageName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 5
  testRunner.And("dismiss the cookies overlay", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 6
 testRunner.When(string.Format("I select the \'{0}\' article via the \'{1}\' link", article, linkType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 7
 testRunner.Then(string.Format("correct article \'{0}\' will be displayed", expectedArticle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Accessing the buttons and links in the news article pages will navigate the user " +
            "to the correct page")]
        [NUnit.Framework.TestCaseAttribute("Summer Is Here", "Back To News Button", "News", null)]
        [NUnit.Framework.TestCaseAttribute("Pooch Car Safety", "Back To News Button", "News", null)]
        [NUnit.Framework.TestCaseAttribute("Why Use a Harness?", "Back To News Button", "News", null)]
        [NUnit.Framework.TestCaseAttribute("Summer Is Here", "Summer Collection Image", "Summer Time", null)]
        [NUnit.Framework.TestCaseAttribute("Summer Is Here", "Travel Flask", "Water & Food Flask with Collapsible Travel Bowl", null)]
        [NUnit.Framework.TestCaseAttribute("Summer Is Here", "Summer Cooling Vest", "Summer Cooling Vest", null)]
        [NUnit.Framework.TestCaseAttribute("Summer Is Here", "Summer Cooling Scarf", "Summer Cooling Scarf", null)]
        [NUnit.Framework.TestCaseAttribute("Summer Is Here", "Thick Fur Grooming Comb", "Thick Fur Grooming Comb", null)]
        public virtual void AccessingTheButtonsAndLinksInTheNewsArticlePagesWillNavigateTheUserToTheCorrectPage(string article, string hyperLink, string expectedPage, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Accessing the buttons and links in the news article pages will navigate the user " +
                    "to the correct page", null, exampleTags);
#line 18
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 19
 testRunner.Given(string.Format("the news \'{0}\' is loaded", article), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 20
  testRunner.And("dismiss the cookies overlay", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
 testRunner.When(string.Format("I select the \'{0}\'", hyperLink), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 22
 testRunner.Then(string.Format("the \'{0}\' will be displayed", expectedPage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
